using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Jumper : MonoBehaviour
{
    [SerializeField] private InputController input;
    [SerializeField] private float jumpHeight;
    [SerializeField] private int maxAirJumps = 0;
    [SerializeField] private float fallMultiplier = 3f;
    [SerializeField] private float lowFallMultiplier = 3f;

    private Rigidbody2D rb;
    private Ground ground;
    private Vector2 velocity;

    private int jumpPhase;
    private float defaultGravityScale;
    private bool desiredJump;
    private bool onGround;

    private void Awake()
    {
        rb = GetComponent<Rigidbody2D>();
        ground = GetComponent<Ground>();

        defaultGravityScale = 1f;
    }

    private void Update()
    {
        desiredJump |= input.RetrieveJumpInput();
    }

    private void FixedUpdate()
    {
        onGround = ground.getOnGround();
        velocity = rb.velocity;
        if (onGround)
        {
            jumpPhase = 0;
        }
        if (desiredJump)
        {
            desiredJump = false;
            JumpAction();
        }
        if(rb.velocity.y < 0)
        {
            //rb.gravityScale =upwardMovementMultiplier;
            rb.velocity += Vector2.up * Physics2D.gravity.y * (fallMultiplier - 1) * Time.deltaTime;

        } else if(rb.velocity.y > 0 && !Input.GetButtonDown("Jump"))
        {
            //rb.gravityScale = downwardMovementMultiplier;
            rb.velocity += Vector2.up * Physics2D.gravity.y * (lowFallMultiplier - 1) * Time.deltaTime;

        }
        rb.velocity = velocity;
    }


    private void JumpAction()
    {
        rb.velocity = new Vector2(rb.velocity.x, jumpHeight);
        Debug.Log("Haram");
    }
}
